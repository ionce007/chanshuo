<%- include('./partials/header') %>
    <style>
        .columns h2 {height: 21px;line-height: 21px;font-weight: 700;border-left: 6px solid #cc8c52;color: #528fcc;padding-left: 10px;font-size: 18px;overflow: hidden;}
        .grid {--bulma-grid-column-min: 15rem;margin-top: 1.5rem;}
        .title {font-size: 1rem;}
        .subtitle {font-size: 0.75rem;}
        .cell {border: 2px solid #ffccee;padding: 10px;border-radius: 5px;/*box-shadow: 10px 10px 5px #888888;transform: perspective(300px) rotateY(15deg);*/}
        .ths .cell,.tdx .cell {min-height: 60px;}
        .ths,.tdx {border: 1px solid #ffccee;border-radius: 10px;}
        .ths {margin-right: 5px;}
        .tdx {margin-left: 5px;}
        .middle {margin: 5px auto;}
        .content {display: -webkit-box;overflow: hidden;text-overflow: ellipsis;word-break: break-all;-webkit-box-orient: vertical;-webkit-line-clamp: 2;}
        .addtime {padding-left: .8rem;font-size: 14px;}
        .card-header-title {padding: .1rem .8rem .4rem;}
        .card-content {padding: .4rem;}
        @media screen and (max-width: 600px) {
            .grid {--bulma-grid-column-min: 9rem;margin-top: 1.5rem;}
        }
    </style>
    <script type="text/javascript">tag = 'hotstock'</script>
    <link rel="stylesheet" href="/static/animate.css">
    <!--<link rel="stylesheet" href="/static/loading.css">-->
    <link rel="stylesheet" href="/static/page-loading.css?v=1.2">
    <!--<link rel="stylesheet" href="https://bulma.io/assets/css/website.min.css?v=202404301313">-->
    <div class="columns is-mobile">
        <div class="column is-12">
            <p><strongstyle="color:#ff0000;font-size:500;">声明：</strongstyle=>
                    <br />本站发布此信息的目的在于将分散在各平台的信息集中展现，方便访问者对相似数据的比较，以提高复盘效率；本专题任何信息不构成对任何人的投资建议，投资者应当自主决策，风险自担！本页股票概念板块数据均从相关平台采集，与本站立场无关，本站不对相关数据负责！
            </p>
        </div>
    </div>
    <div class="columns is-desktop">
        <div class="column is-12">
            <h1 class="title">新增概念板块</h1>
        </div>
    </div>
    <div class="columns is-desktop">
        <div class="column is-12">
            <div class="columns is-mobile">
                <div class="column is-7">
                    <h2 style="margin-top:10px;">概念时间表</h2>
                </div>
                <div class="column is-5">
                    <!--<p><a class="button" onclick='showComponentChange()' style="float:right;margin-right:5px;">成份股变动</a></p>-->
                    <p><a class="button" href="/gnchange" style="float:right;margin-right:5px;">成份股变动</a></p>
                </div>
            </div>
            <div class="grid ">
            </div>
        </div>
    </div>


    <%- include('./partials/footer') %>
        <script src="/static/loading.js?v=1.1"></script>
        <script src="/static/Hexin-V.js?t=1122"></script>
        <script type="text/javascript">
            function timestampToTime(timestamp) {
                var len = (timestamp + '').length;
                var date = new Date(len === 10 ? timestamp * 1000 : timestamp);//时间戳为10位需*1000，时间戳为13位的话不需乘1000
                var Y = date.getFullYear() + '-';
                debugger;
                var M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';
                var D = date.getDate() + ' ';
                var h = date.getHours() + ':';
                var m = date.getMinutes() + ':';
                var s = date.getSeconds();
                return Y + M + D + h + m + s;
            }
            var hexinV = getHexinV();
            var pageIndex = 1;
            var loading_timer;
            (function () { crawlerGN(); })();
            /*window.onscroll = function () {
                if (window.innerHeight + window.scrollY >= document.body.offsetHeight) {
                    Toast("数据读取中，请稍等......", 3000);
                    pageIndex++;
                    crawlerGN();
                }
            }*/
            //------------------------下拉刷新-------------------------------
            //定义的全局变量
            /*var disY, startY, endY;
            //触摸事件开始时触发
            $('.grid').on('touchstart', function (e) {
                debugger;
                startY = e.changedTouches[0].pageY;
            });
            //触摸事件移动中时触发
            $('.grid').on('touchmove', function (e) {
                debugger;
                endY = e.changedTouches[0].pageY;
                disY = endY - startY;
                if (disY > 30) {
                    $('.status').css({display: 'block',height: disY + 'px',});
                }
            });
            //触摸事件结束时触发
            $('.grid').on('touchend', function (e) {
                debugger;
                endY = e.changedTouches[0].pageY;
                disY = endY - startY;
                if (disY > 72) {
                    //定义一个定时器，返回下拉到一定的高度
                    var timer = setInterval(function () {
                        disY -= 13;
                        if (disY <= 60) {
                            $('.status').css({height: 52 + 'px',});
                            clearInterval(timer);
                            //refresh();
                        }
                        $('.status').css({height: disY + 'px',});
                    }, 75);
                }
            });*/
            //--------------上拉加载更多---------------
            //获取滚动条当前的位置
            function getScrollTop() {
                var scrollTop = 0;
                if (document.documentElement && document.documentElement.scrollTop) {
                    scrollTop = document.documentElement.scrollTop;
                } else if (document.body) {
                    scrollTop = document.body.scrollTop;
                }
                return scrollTop;
                }
                
                //获取当前可视范围的高度
                function getClientHeight() {
                    var clientHeight = 0;
                    if (document.body.clientHeight && document.documentElement.clientHeight) {
                        clientHeight = Math.min(document.body.clientHeight, document.documentElement.clientHeight);
                    } else {
                        clientHeight = Math.max(document.body.clientHeight, document.documentElement.clientHeight);
                    }
                    return clientHeight;
                }
                
                //获取文档完整的高度
                function getScrollHeight() {
                    return Math.max(document.body.scrollHeight, document.documentElement.scrollHeight);
                }
                
                //滚动事件触发
                window.onscroll = function () {
                    if (getScrollTop() + getClientHeight() === getScrollHeight()) {
                        console.log('在这里加载数据咯！');
                        Toast("数据读取中，请稍等......", 3000);
                        pageIndex++;
                        crawlerGN();
                    }
                };

            function showComponentChange() {
                var apiUrl = '/api/components';
                var xhr = new XMLHttpRequest();
                xhr.open('get', apiUrl, true);
                xhr.onload = (e) => {console.log(e);}
                xhr.onreadystatechange = function () {
                    if (xhr.readyState == 3) {
                        console.info(xhr.responseText);
                        //xhr.send(null);
                    }
                }
                xhr.addEventListener('message', function (e) {
                    console.log(e);
                });
                xhr.send('');

            }
            var tips;
            function crawlerGN() {
                var apiUrl = '/api/crawlerAllConcept';
                //if(!pageIndex) pageIndex = 1;
                $.ajax({
                    url: apiUrl,
                    type: 'POST',
                    data: { hexinV: hexinV, pageIndex: pageIndex },
                    dataType: 'json',
                    beforeSend: function () {
                        tips = Tips('数据获取中，请稍等......', 3000);
                    },
                    complete: function () {
                        removeTips(tips)
                    },
                    async: true,
                    success: function (res) {
                        console.log('pageIndex = ', pageIndex, '   res.data = ', res.data);
                        if (res.code === 1) {
                            var html = '';
                            $.each(res.data, function (index, item) {
                                html += "                        <div class='cell'>"
                                html += "                            <div class='card'>";
                                html += "                                <header class='addtime'>";
                                html += `                                    <span class=''>${item.addtime}</span>`;
                                html += "                                </header>";
                                html += "                                <header class='card-header'>";
                                html += `                                  <p class='card-header-title'>${item.gnName}</p>`;
                                html += "                                </header>";
                                html += "                                <div class='card-content'>";
                                html += `                                  <div class='content'>${item.remark}</div>`;
                                html += "                                </div>";
                                html += "                            </div>";
                                html += "                        </div>"
                            });
                            $('.grid').append(html);
                            //removeLoading('dataLoading');
                        }
                        else if (res.code === 2) {
                            Toast(res.msg, 3000);
                            //removeLoading('dataLoading');
                        }
                        else {
                            Hexin_V = getHexinV();
                            crawlerGN(pageIndex);
                        }
                    },
                    error: function (err) {
                        console.log(err);
                        Toast('获取概念时间表失败！', 3000);
                    }
                })
            }
        </script>